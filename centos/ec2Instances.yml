# AWS playbook
---

- hosts: localhost
  connection: local
  gather_facts: False

  vars:
    key_name: my_aws
    region: eu-west-1
    image: ami-0c3e74fa87d2a4227 # https://cloud-images.ubuntu.com/locator/ec2/
    id: "web-app"
    sec_group: "{{ id }}-sec"
    dest: "/home/ubuntu/kubernetes-ansible/centos/task_input"
    home_path: "/home/ubuntu/kubernetes-ansible/centos"
    var_path: "/home/ubuntu/kubernetes-ansible/centos/playbooks"

  tasks:

    - name: Facts
      block:

      - name: Get instances facts
        ec2_instance_facts:
          aws_access_key: "{{ec2_access_key}}"
          aws_secret_key: "{{ec2_secret_key}}"
          region: "{{ region }}"
        register: result

      - name: Instances ID
        debug:
          msg: "ID: {{ item.instance_id }} - State: {{ item.state.name }} - Public DNS: {{ item.public_dns_name }}"
        loop: "{{ result.instances }}"
        register: result_ip

      - local_action: 
          module: copy 
          content: "{{ result_ip }}"
          dest: "{{ dest }}"

      tags: always

    - name: This command will find the Master ip address of instances
      shell:
        cmd: fold -s task_input | egrep "public_dns_name|public_ip" | awk -F "\"" '{print $4}'| grep -iv "[a-z]" | sed -i "2ikubernetes-master ansible_host=$(head -1)" hosts
        chdir: "{{ home_path }}"

    - name: This command will find the Master ip address of instances
      shell:
        cmd: fold -s task_input | egrep "public_dns_name|public_ip" | awk -F "\"" '{print $4}'| grep -iv "[a-z]" | sed -i "2iad_addr:$(head -1)" env_variables
        chdir: "{{ var_path }}"

    - name: This command will find the worker ip address of instances
      shell:
        cmd: fold -s task_input | egrep "public_dns_name|public_ip" | awk -F "\"" '{print $4}' | grep -iv "[a-z]" | sed -i "5ikubernetes-worker ansible_host=$(tail -1)" hosts
        chdir: "{{ home_path }}"


    - name: Provisioning EC2 instances
      block:

      - name: Upload public key to AWS
        ec2_key:
          name: "{{ key_name }}"
          key_material: "{{ lookup('file', '/home/ubuntu/.ssh/{{ key_name }}.pub') }}"
          region: "{{ region }}"
          aws_access_key: "{{ec2_access_key}}"
          aws_secret_key: "{{ec2_secret_key}}"

      - name: Create security group
        ec2_group:
          name: "{{ sec_group }}"
          description: "Sec group for app {{ id }}"
          # vpc_id: 12345
          region: "{{ region }}"
          aws_access_key: "{{ec2_access_key}}"
          aws_secret_key: "{{ec2_secret_key}}"
          rules:
            - proto: tcp
              ports:
                - 22
              cidr_ip: 0.0.0.0/0
              rule_desc: allow all on ssh port
        register: result_sec_group

      - name: Provision instance(s)
        ec2:
          aws_access_key: "{{ec2_access_key}}"
          aws_secret_key: "{{ec2_secret_key}}"
          key_name: "{{ key_name }}"
          id: "{{ id }}"
          group_id: "{{ result_sec_group.group_id }}"
          image: "{{ image }}"
          instance_type: t2.micro
          region: "{{ region }}"
          wait: true
          count: 2
          # exact_count: 2
          # count_tag:
          #   Name: App
          # instance_tags:
          #   Name: App

      tags: ['never', 'create_ec2']
